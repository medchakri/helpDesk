{"ast":null,"code":"import _classCallCheck from \"D:\\\\Projets\\\\Angular\\\\helpDesk\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"D:\\\\Projets\\\\Angular\\\\helpDesk\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { ToastrService } from 'ngx-toastr';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-toastr\";\nexport var NotificationsComponent = /*#__PURE__*/(function () {\n  var NotificationsComponent = /*#__PURE__*/function () {\n    function NotificationsComponent(toastr) {\n      _classCallCheck(this, NotificationsComponent);\n\n      this.toastr = toastr;\n      this.staticAlertClosed = false;\n      this.staticAlertClosed1 = false;\n      this.staticAlertClosed2 = false;\n      this.staticAlertClosed3 = false;\n      this.staticAlertClosed4 = false;\n      this.staticAlertClosed5 = false;\n      this.staticAlertClosed6 = false;\n      this.staticAlertClosed7 = false;\n    }\n\n    _createClass(NotificationsComponent, [{\n      key: \"showNotification\",\n      value: function showNotification(from, align) {\n        var color = Math.floor(Math.random() * 5 + 1);\n\n        switch (color) {\n          case 1:\n            this.toastr.info('<span class=\"tim-icons icon-bell-55\" [data-notify]=\"icon\"></span> Welcome to <b>Black Dashboard Angular</b> - a beautiful freebie for every web developer.', '', {\n              disableTimeOut: true,\n              closeButton: true,\n              enableHtml: true,\n              toastClass: \"alert alert-info alert-with-icon\",\n              positionClass: 'toast-' + from + '-' + align\n            });\n            break;\n\n          case 2:\n            this.toastr.success('<span class=\"tim-icons icon-bell-55\" [data-notify]=\"icon\"></span> Welcome to <b>Black Dashboard Angular</b> - a beautiful freebie for every web developer.', '', {\n              disableTimeOut: true,\n              closeButton: true,\n              enableHtml: true,\n              toastClass: \"alert alert-success alert-with-icon\",\n              positionClass: 'toast-' + from + '-' + align\n            });\n            break;\n\n          case 3:\n            this.toastr.warning('<span class=\"tim-icons icon-bell-55\" [data-notify]=\"icon\"></span> Welcome to <b>Black Dashboard Angular</b> - a beautiful freebie for every web developer.', '', {\n              disableTimeOut: true,\n              closeButton: true,\n              enableHtml: true,\n              toastClass: \"alert alert-warning alert-with-icon\",\n              positionClass: 'toast-' + from + '-' + align\n            });\n            break;\n\n          case 4:\n            this.toastr.error('<span class=\"tim-icons icon-bell-55\" [data-notify]=\"icon\"></span> Welcome to <b>Black Dashboard Angular</b> - a beautiful freebie for every web developer.', '', {\n              disableTimeOut: true,\n              enableHtml: true,\n              closeButton: true,\n              toastClass: \"alert alert-danger alert-with-icon\",\n              positionClass: 'toast-' + from + '-' + align\n            });\n            break;\n\n          case 5:\n            this.toastr.show('<span class=\"tim-icons icon-bell-55\" [data-notify]=\"icon\"></span> Welcome to <b>Black Dashboard Angular</b> - a beautiful freebie for every web developer.', '', {\n              disableTimeOut: true,\n              closeButton: true,\n              enableHtml: true,\n              toastClass: \"alert alert-primary alert-with-icon\",\n              positionClass: 'toast-' + from + '-' + align\n            });\n            break;\n\n          default:\n            break;\n        }\n      }\n    }, {\n      key: \"ngOnInit\",\n      value: function ngOnInit() {}\n    }]);\n\n    return NotificationsComponent;\n  }();\n\n  NotificationsComponent.ɵfac = function NotificationsComponent_Factory(t) {\n    return new (t || NotificationsComponent)(i0.ɵɵdirectiveInject(i1.ToastrService));\n  };\n\n  NotificationsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NotificationsComponent,\n    selectors: [[\"app-notifications\"]],\n    decls: 42,\n    vars: 8,\n    consts: [[1, \"content\"], [1, \"row\"], [1, \"col-md-6\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-title\"], [1, \"card-body\"], [3, \"type\", \"dismissible\"], [1, \"btn\", \"btn-success\", 3, \"click\"]],\n    template: function NotificationsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelementStart(5, \"h4\", 5);\n        i0.ɵɵtext(6, \"Ticket 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 6);\n        i0.ɵɵelementStart(8, \"ngb-alert\", 7);\n        i0.ɵɵelementStart(9, \"span\");\n        i0.ɵɵtext(10, \" This is a notification with close button and icon and have many lines. You can see that the icon and the close button are always vertically aligned. This is a beautiful notification. So you don't have to worry about the style. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 2);\n        i0.ɵɵelementStart(12, \"div\", 3);\n        i0.ɵɵelementStart(13, \"div\", 4);\n        i0.ɵɵelementStart(14, \"h4\", 5);\n        i0.ɵɵtext(15, \"Ticket 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 6);\n        i0.ɵɵelementStart(17, \"ngb-alert\", 7);\n        i0.ɵɵelementStart(18, \"span\");\n        i0.ɵɵtext(19, \" This is a notification with close button and icon and have many lines. You can see that the icon and the close button are always vertically aligned. This is a beautiful notification. So you don't have to worry about the style. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 2);\n        i0.ɵɵelementStart(21, \"div\", 3);\n        i0.ɵɵelementStart(22, \"div\", 4);\n        i0.ɵɵelementStart(23, \"h4\", 5);\n        i0.ɵɵtext(24, \"Ticket 3\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 6);\n        i0.ɵɵelementStart(26, \"ngb-alert\", 7);\n        i0.ɵɵelementStart(27, \"span\");\n        i0.ɵɵtext(28, \" This is a notification with close button and icon and have many lines. You can see that the icon and the close button are always vertically aligned. This is a beautiful notification. So you don't have to worry about the style. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"div\", 2);\n        i0.ɵɵelementStart(30, \"div\", 3);\n        i0.ɵɵelementStart(31, \"div\", 4);\n        i0.ɵɵelementStart(32, \"h4\", 5);\n        i0.ɵɵtext(33, \"Ticket 4\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"div\", 6);\n        i0.ɵɵelementStart(35, \"ngb-alert\", 7);\n        i0.ɵɵelementStart(36, \"span\");\n        i0.ɵɵtext(37, \" This is a notification with close button and icon and have many lines. You can see that the icon and the close button are always vertically aligned. This is a beautiful notification. So you don't have to worry about the style. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"div\", 2);\n        i0.ɵɵelementStart(39, \"div\", 3);\n        i0.ɵɵelementStart(40, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function NotificationsComponent_Template_button_click_40_listener() {\n          return ctx.showNotification(\"top\", \"left\");\n        });\n        i0.ɵɵtext(41, \" ADD Ticket \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"type\", \"info\")(\"dismissible\", false);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"type\", \"info\")(\"dismissible\", false);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"type\", \"info\")(\"dismissible\", false);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"type\", \"info\")(\"dismissible\", false);\n      }\n    },\n    encapsulation: 2\n  });\n  return NotificationsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}